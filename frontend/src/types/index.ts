// frontend/src/types/index.ts

export interface Song {
  _id: string;
  title: string;
  artist: string;
  albumId: string | null;
  imageUrl: string;
  audioUrl: string;
  duration: number; // in seconds
  createdAt: string;
  updatedAt: string;
  albumTitle?: string;
  // üí° –î–æ–±–∞–≤–∏–º –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –ø–æ–ª–µ likedAt, —Ç–∞–∫ –∫–∞–∫ –æ–Ω–æ –±—É–¥–µ—Ç —Ç–æ–ª—å–∫–æ —É –ª–∞–π–∫–Ω—É—Ç—ã—Ö –ø–µ—Å–µ–Ω
  likedAt?: string;
}

export interface Album {
  _id: string;
  title: string;
  artist: string;
  imageUrl: string;
  releaseYear: number;
  songs: Song[];
  type: "album";
  createdAt: string;
  updatedAt: string;
  // üí° –î–æ–±–∞–≤–∏–º –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –ø–æ–ª–µ addedAt –¥–ª—è –∞–ª—å–±–æ–º–æ–≤ –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ
  addedAt: string;
}

export interface Stats {
  totalSongs: number;
  totalAlbums: number;
  totalUsers: number;
  totalArtists: number;
}

export interface Message {
  _id: string;
  senderId: string;
  receiverId: string;
  content: string;
  createdAt: string;
  updatedAt: string;
}

export interface User {
  _id: string;
  firebaseUid: string;
  fullName: string;
  imageUrl: string;
  email: string; // –î–æ–±–∞–≤–∏—Ç—å email, –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ AuthStore –∏–ª–∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è
  isAdmin?: boolean; // –î–æ–±–∞–≤–∏—Ç—å –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –ø–æ–ª–µ isAdmin
  playlists?: Playlist[];
}

export interface SearchState {
  query: string;
  songs: Song[];
  albums: Album[];
  playlists: Playlist[]; // <-- –≠–¢–û –í–ê–ñ–ù–û: –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∑–¥–µ—Å—å

  loading: boolean;
  error: string | null;
  setQuery: (q: string) => void;
  search: (q: string) => Promise<void>;
}

// üí° –û–ë–ù–û–í–õ–ï–ù–ù–´–ô –ò–ù–¢–ï–†–§–ï–ô–° UserLibrary –¥–ª—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –±—ç–∫–µ–Ω–¥—É
export interface UserLibrary {
  userId: string;
  likedSongs: Song[]; // üí° –ò–°–ü–†–ê–í–õ–ï–ù–û: –¢–µ–ø–µ—Ä—å –º–∞—Å—Å–∏–≤ –ø–æ–ª–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ Song (–≤–∫–ª—é—á–∞—è likedAt)
  albums: Album[]; // üí° –ò–°–ü–†–ê–í–õ–ï–ù–û: –¢–µ–ø–µ—Ä—å –º–∞—Å—Å–∏–≤ –ø–æ–ª–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ Album (–≤–∫–ª—é—á–∞—è addedAt)
}

export interface Playlist {
  _id: string;
  title: string;
  description?: string;
  isPublic: boolean;
  owner: User; // –°—Å—ã–ª–∫–∞ –Ω–∞ –≤–ª–∞–¥–µ–ª—å—Ü–∞ –ø–ª–µ–π–ª–∏—Å—Ç–∞
  songs: Song[]; // –ú–∞—Å—Å–∏–≤ –ø–µ—Å–µ–Ω –≤ –ø–ª–µ–π–ª–∏—Å—Ç–µ
  type: "playlist";
  imageUrl?: string; // –û–±–ª–æ–∂–∫–∞ –ø–ª–µ–π–ª–∏—Å—Ç–∞
  likes: number; // –ú–∞—Å—Å–∏–≤ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –ª–∞–π–∫–Ω—É–ª–∏ –ø–ª–µ–π–ª–∏—Å—Ç
  createdAt: string;
  updatedAt: string;
}

export interface BaseLibraryItem {
  _id: string;
  title: string;
  imageUrl?: string | null;
  createdAt: Date; // –ò—Å–ø–æ–ª—å–∑—É–µ–º Date –∑–¥–µ—Å—å, —Ç–∞–∫ –∫–∞–∫ –º—ã –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏
}

// –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ç–∏–ø –¥–ª—è "Liked Songs"
export interface LikedSongsItem extends BaseLibraryItem {
  type: "liked-songs";
  songsCount: number;
}

// –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ç–∏–ø –¥–ª—è –∞–ª—å–±–æ–º–æ–≤
export interface AlbumItem extends BaseLibraryItem {
  type: "album";
  artist: string;
}

// –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ç–∏–ø –¥–ª—è –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤
export interface PlaylistItem extends BaseLibraryItem {
  type: "playlist";
  owner: User; // –í–∞–∂–Ω–æ, —á—Ç–æ–±—ã –∑–¥–µ—Å—å –±—ã–ª —Ç–∏–ø User
}

// –û–±—ä–µ–¥–∏–Ω—è—é—â–∏–π —Ç–∏–ø –¥–ª—è –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
export type LibraryItem = LikedSongsItem | AlbumItem | PlaylistItem;

export interface LibraryPlaylist extends Playlist {
  addedAt: string; // –î–∞—Ç–∞, –∫–æ–≥–¥–∞ —é–∑–µ—Ä –¥–æ–±–∞–≤–∏–ª —á—É–∂–æ–π –ø–ª–µ–π–ª–∏—Å—Ç –≤ —Å–≤–æ—é –±–∏–±–ª–∏–æ—Ç–µ–∫—É
}
