// frontend/src/types/index.ts

export interface Song {
  _id: string;
  title: string;
  artist: string;
  albumId: string | null;
  imageUrl: string;
  audioUrl: string;
  duration: number; // in seconds
  createdAt: string;
  updatedAt: string;
  albumTitle?: string;
  // üí° –î–æ–±–∞–≤–∏–º –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –ø–æ–ª–µ likedAt, —Ç–∞–∫ –∫–∞–∫ –æ–Ω–æ –±—É–¥–µ—Ç —Ç–æ–ª—å–∫–æ —É –ª–∞–π–∫–Ω—É—Ç—ã—Ö –ø–µ—Å–µ–Ω
  likedAt?: string;
}

export interface Album {
  _id: string;
  title: string;
  artist: string;
  imageUrl: string;
  releaseYear: number;
  songs: Song[];
  type: string | "Album";
  createdAt: string;
  updatedAt: string;
  // üí° –î–æ–±–∞–≤–∏–º –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –ø–æ–ª–µ addedAt –¥–ª—è –∞–ª—å–±–æ–º–æ–≤ –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ
  addedAt?: string;
}

export interface Stats {
  totalSongs: number;
  totalAlbums: number;
  totalUsers: number;
  totalArtists: number;
}

export interface Message {
  _id: string;
  senderId: string;
  receiverId: string;
  content: string;
  createdAt: string;
  updatedAt: string;
}

export interface User {
  _id: string;
  firebaseUid: string;
  fullName: string;
  imageUrl: string;
}

export interface SearchState {
  query: string;
  songs: Song[];
  albums: Album[];
  loading: boolean;
  error: string | null;
  setQuery: (q: string) => void;
  search: (q: string) => Promise<void>;
}

// üí° –û–ë–ù–û–í–õ–ï–ù–ù–´–ô –ò–ù–¢–ï–†–§–ï–ô–° UserLibrary –¥–ª—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –±—ç–∫–µ–Ω–¥—É
export interface UserLibrary {
  userId: string;
  likedSongs: Song[]; // üí° –ò–°–ü–†–ê–í–õ–ï–ù–û: –¢–µ–ø–µ—Ä—å –º–∞—Å—Å–∏–≤ –ø–æ–ª–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ Song (–≤–∫–ª—é—á–∞—è likedAt)
  albums: Album[]; // üí° –ò–°–ü–†–ê–í–õ–ï–ù–û: –¢–µ–ø–µ—Ä—å –º–∞—Å—Å–∏–≤ –ø–æ–ª–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ Album (–≤–∫–ª—é—á–∞—è addedAt)
}
